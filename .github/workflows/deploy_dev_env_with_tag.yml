name: Deploy CaC to Dev Environment by Tag

on:
  workflow_dispatch:
    inputs:
      version_tag:
        description: 'Tag version to deploy (e.g., v2.3.1)'
        required: true
        type: string

env:
  ARTIFACT_NAME: PowerShell.Workflows.ScriptSigning

jobs:
  check-version:
    name: Validate Version Tag
    runs-on: ubuntu-latest
    outputs:
      valid: ${{ steps.validate.outputs.valid }}
    steps:
      - name: Check version tag is >= v2.1.2
        id: validate
        run: |
          tag="${{ github.event.inputs.version_tag }}"
          if [[ "$tag" < "v2.1.2" ]]; then
            echo "Invalid tag: $tag is less than v2.1.2"
            exit 1
          fi
          echo "valid=true" >> $GITHUB_OUTPUT

  sign-scripts:
    name: Validate, test and publish Powershell scripts as pipeline artifacts
    needs: check-version
    if: needs.check-version.outputs.valid == 'true'
    runs-on: windows-2019
    environment: test
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.version_tag }}

      - name: Test Module Imports
        shell: powershell
        run: |
          $ErrorActionPreference = 'Stop'
          $moduleFiles = Get-ChildItem -path ./* -recurse -include *.psm1
          ForEach ($moduleFile in $moduleFiles) {
            Import-Module $moduleFile.Fullname -ErrorAction Stop
          }

      - name: Zip Signed Modules
        shell: powershell
        run: |
          $moduleCodeFilesObjs = Get-ChildItem -Path .\src -Recurse -Include *.psm1 -Exclude '*-GSA*','*GuardrailsSolutionAcceleratorSetup*','*Deploy-GuardrailsSolutionAccelerator*'
          ForEach ($moduleCodeFile in $moduleCodeFilesObjs) {
            $moduleManifestFile = Get-Item -Path $moduleCodeFile.FullName.replace('psm1','psd1')
            $destPath = "./psmodules/$($moduleCodeFile.BaseName).zip"
            If ($moduleCodeFile.Directory.Name -eq 'Guardrails-Localization') {
              Compress-Archive -Path "$($moduleCodeFile.Directory)/*" -DestinationPath $destPath -Force
            }
            Else {
              $filesToZip = $moduleManifestFile,$moduleCodeFile
              Compress-Archive -Path $filesToZip -DestinationPath $destPath -Force
            }
          }

      - name: Publish artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: ./psmodules/*.zip

  deploy:
    name: Deploy CaC to Dev Tenant
    needs: sign-scripts
    runs-on: ubuntu-latest
    environment: dev
    steps:
      - name: Check out repository at tag
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.version_tag }}

      - name: Download zipped modules and replace old ones
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: ./psmodules

      - name: AZ Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.DEV_AZURE_CREDENTIALS }}
          enable-AzPSSession: true